{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "HandleMsg",
  "anyOf": [
    {
      "description": "Implementation cw20 receive msg",
      "type": "object",
      "required": [
        "receive"
      ],
      "properties": {
        "receive": {
          "$ref": "#/definitions/Cw20ReceiveMsg"
        }
      }
    },
    {
      "description": "Initialize an asset on the money market",
      "type": "object",
      "required": [
        "init_asset"
      ],
      "properties": {
        "init_asset": {
          "type": "object",
          "required": [
            "asset_info",
            "asset_params"
          ],
          "properties": {
            "asset_info": {
              "description": "Asset related info",
              "allOf": [
                {
                  "$ref": "#/definitions/InitAssetInfo"
                }
              ]
            },
            "asset_params": {
              "description": "Asset parameters",
              "allOf": [
                {
                  "$ref": "#/definitions/InitAssetParams"
                }
              ]
            }
          }
        }
      }
    },
    {
      "description": "Callback sent from maToken contract after instantiated",
      "type": "object",
      "required": [
        "init_asset_token_callback"
      ],
      "properties": {
        "init_asset_token_callback": {
          "type": "object",
          "required": [
            "reference",
            "symbol"
          ],
          "properties": {
            "reference": {
              "description": "Either the denom for a terra native asset or address for a cw20 token",
              "type": "array",
              "items": {
                "type": "integer",
                "format": "uint8",
                "minimum": 0.0
              }
            },
            "symbol": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "description": "Deposit Terra native coins",
      "type": "object",
      "required": [
        "deposit_native"
      ],
      "properties": {
        "deposit_native": {
          "type": "object",
          "required": [
            "denom"
          ],
          "properties": {
            "denom": {
              "description": "Denom used in Terra (e.g: uluna, uusd)",
              "type": "string"
            }
          }
        }
      }
    },
    {
      "description": "Borrow Terra native coins",
      "type": "object",
      "required": [
        "borrow_native"
      ],
      "properties": {
        "borrow_native": {
          "type": "object",
          "required": [
            "amount",
            "denom"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint256"
            },
            "denom": {
              "description": "Denom used in Terra (e.g: uluna, uusd)",
              "type": "string"
            }
          }
        }
      }
    },
    {
      "description": "Repay Terra native coins loan",
      "type": "object",
      "required": [
        "repay_native"
      ],
      "properties": {
        "repay_native": {
          "type": "object",
          "required": [
            "denom"
          ],
          "properties": {
            "denom": {
              "description": "Denom used in Terra (e.g: uluna, uusd)",
              "type": "string"
            }
          }
        }
      }
    }
  ],
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "Cw20ReceiveMsg": {
      "description": "Cw20ReceiveMsg should be de/serialized under `Receive()` variant in a HandleMsg",
      "type": "object",
      "required": [
        "amount",
        "sender"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "msg": {
          "anyOf": [
            {
              "$ref": "#/definitions/Binary"
            },
            {
              "type": "null"
            }
          ]
        },
        "sender": {
          "$ref": "#/definitions/HumanAddr"
        }
      }
    },
    "Decimal256": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal256(1_000_000_000_000_000_000) == 1.0 The greatest possible value that can be represented is 115792089237316195423570985008687907853269984665640564039457.584007913129639935 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "HumanAddr": {
      "type": "string"
    },
    "InitAssetInfo": {
      "description": "We currently take no arguments for migrations",
      "anyOf": [
        {
          "type": "object",
          "required": [
            "Cw20"
          ],
          "properties": {
            "Cw20": {
              "type": "object",
              "required": [
                "contract_addr"
              ],
              "properties": {
                "contract_addr": {
                  "$ref": "#/definitions/HumanAddr"
                }
              }
            }
          }
        },
        {
          "type": "object",
          "required": [
            "Native"
          ],
          "properties": {
            "Native": {
              "type": "object",
              "required": [
                "denom"
              ],
              "properties": {
                "denom": {
                  "type": "string"
                }
              }
            }
          }
        }
      ]
    },
    "InitAssetParams": {
      "type": "object",
      "required": [
        "borrow_slope",
        "loan_to_value"
      ],
      "properties": {
        "borrow_slope": {
          "description": "Borrow slope to calculate borrow rate",
          "allOf": [
            {
              "$ref": "#/definitions/Decimal256"
            }
          ]
        },
        "loan_to_value": {
          "description": "Max percentage of collateral that can be borrowed",
          "allOf": [
            {
              "$ref": "#/definitions/Decimal256"
            }
          ]
        }
      }
    },
    "Uint128": {
      "type": "string"
    },
    "Uint256": {
      "type": "string"
    }
  }
}
