{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Config",
  "description": "Lending pool global configuration",
  "type": "object",
  "required": [
    "address_provider_address",
    "close_factor",
    "insurance_fund_fee_share",
    "ma_token_code_id",
    "owner",
    "treasury_fee_share"
  ],
  "properties": {
    "address_provider_address": {
      "description": "Address provider returns addresses for all protocol contracts",
      "allOf": [
        {
          "$ref": "#/definitions/CanonicalAddr"
        }
      ]
    },
    "close_factor": {
      "description": "Maximum percentage of outstanding debt that can be covered by a liquidator",
      "allOf": [
        {
          "$ref": "#/definitions/Decimal256"
        }
      ]
    },
    "insurance_fund_fee_share": {
      "description": "Percentage of fees that are sent to the insurance fund",
      "allOf": [
        {
          "$ref": "#/definitions/Decimal256"
        }
      ]
    },
    "ma_token_code_id": {
      "description": "maToken code id used to instantiate new tokens",
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "owner": {
      "description": "Contract owner",
      "allOf": [
        {
          "$ref": "#/definitions/CanonicalAddr"
        }
      ]
    },
    "treasury_fee_share": {
      "description": "Percentage of fees that are sent to the treasury",
      "allOf": [
        {
          "$ref": "#/definitions/Decimal256"
        }
      ]
    }
  },
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "CanonicalAddr": {
      "$ref": "#/definitions/Binary"
    },
    "Decimal256": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal256(1_000_000_000_000_000_000) == 1.0 The greatest possible value that can be represented is 115792089237316195423570985008687907853269984665640564039457.584007913129639935 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    }
  }
}
